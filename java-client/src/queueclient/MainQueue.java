/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package queueclient;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.json.*;

/**
 *
 * @author LOW
 */
public class MainQueue extends javax.swing.JFrame {

    /**
     * Creates new form MainQueue
     */
    public MainQueue() {
        initComponents();
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        branchLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userQueLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nowServLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        totalQueLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        leaveBtn = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        brandRad = new javax.swing.JRadioButton();
        catRad = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        latTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lonTxt = new javax.swing.JTextField();
        queueBtn = new javax.swing.JToggleButton();
        brandCombo = new javax.swing.JComboBox<>();
        catCombo = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        submitBtn = new javax.swing.JToggleButton();
        nameTxt = new javax.swing.JTextField();
        userTxt = new javax.swing.JTextField();
        passTxt = new javax.swing.JPasswordField();
        passTxt1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 102, 102));

        logoLabel.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoLabel.setText("GQS");

        jToggleButton1.setText("Logout");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Branch:");

        branchLbl.setText("Branch");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Your Number:");

        userQueLbl.setText("Number");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Currently Serving:");

        nowServLbl.setText("Current");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Lines Ahead:");

        totalQueLbl.setText("13");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        leaveBtn.setText("Leave Queue");
        leaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(branchLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userQueLbl)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nowServLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalQueLbl)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(leaveBtn)
                .addGap(197, 197, 197))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(branchLbl)
                    .addComponent(jLabel3)
                    .addComponent(userQueLbl)
                    .addComponent(jLabel5)
                    .addComponent(nowServLbl)
                    .addComponent(jLabel7)
                    .addComponent(totalQueLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(leaveBtn)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Queue", jPanel2);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Queue Type:");

        buttonGroup1.add(brandRad);
        brandRad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        brandRad.setText("By Brand");
        brandRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandRadActionPerformed(evt);
            }
        });

        buttonGroup1.add(catRad);
        catRad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        catRad.setText("By Category");
        catRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catRadActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Brand Category:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Latitude:");

        latTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latTxtActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Longitude:");

        queueBtn.setText("Queue");
        queueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queueBtnActionPerformed(evt);
            }
        });

        brandCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bank of the Philippine Islands", "Kentucky Fried Chicken", "7-eleven" }));
        brandCombo.setEnabled(false);

        catCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bank", "Fast Food", "Convenience Store" }));
        catCombo.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(brandRad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(catRad))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lonTxt)
                            .addComponent(latTxt)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(brandCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(catCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(8, 8, 8))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(queueBtn)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(brandRad)
                    .addComponent(catRad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(brandCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(latTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(queueBtn)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Join Queue", jPanel3);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Name:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Username:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Password:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Re-enter Password:");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                    .addComponent(userTxt)
                    .addComponent(passTxt)
                    .addComponent(passTxt1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(submitBtn)
                .addGap(214, 214, 214))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(passTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(passTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(submitBtn)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit Profile", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
          try {

            // create HTTP Client
            HttpClient httpClient = HttpClientBuilder.create().build();

            // Create new getRequest with below mentioned URL
            HttpPost postRequest = new HttpPost("http://localhost:8080/ws/account/logout");
            StringEntity input = new StringEntity("{\"session\":\"" + Session.getSesh() + "\"}");
            // Add additional header to getRequest which accepts application/JSON data
            input.setContentType("application/json");
            postRequest.setEntity(input);
            // Execute your request and catch response
            HttpResponse response = httpClient.execute(postRequest);

            // Check for HTTP response code: 200 = success
            if (response.getStatusLine().getStatusCode() != 200) {
                throw new RuntimeException("Failed : HTTP error code : "
                        + response.getStatusLine().getStatusCode());

            }

            // Get-Capture Complete application/JSON body response
            BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
            String output;
            System.out.println("============Output:============");

            // Simply iterate through JSON response and show on console.
            while ((output = br.readLine()) != null) {
                System.out.println(output);

            }
            //Notification of Successful Log Out
            JOptionPane.showMessageDialog(rootPane, "Successfully Logged Out!");

            //Move back to the next Form
            LoginPanel l = new LoginPanel();
            l.setVisible(true);
            this.dispose(); //closes the login page.

        } catch (ClientProtocolException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error! User not found.");

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error! User not found.");

        }


        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void brandRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandRadActionPerformed
        // TODO add your handling code here:
        brandCombo.setEnabled(true);
        catCombo.setEnabled(false);
        
    }//GEN-LAST:event_brandRadActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        if (!userTxt.getText().isEmpty() && !passTxt.getText().isEmpty() && !nameTxt.getText().isEmpty()
                && passTxt.getText().equals(passTxt1.getText())) {
            try {

                // create HTTP Client
                HttpClient httpClient = HttpClientBuilder.create().build();

                // Create new postRequest with below mentioned URL
                HttpPost postRequest = new HttpPost("http://localhost:8080/ws/account/edit/customer");
                StringEntity input = new StringEntity("{\"username\":\"" + userTxt.getText() + "\","
                        + "\"password\":\"" + passTxt.getText() + "\","
                        + "\"name\":\"" + nameTxt.getText() + "\","
                        + "\"session\":\"" + Session.getSesh() + "\"}");
                // Add additional header to getRequest which accepts application/JSON data
                input.setContentType("application/json");
                postRequest.setEntity(input);
                // Execute your request and catch response
                HttpResponse response = httpClient.execute(postRequest);

                // Check for HTTP response code: 200 = success
                if (response.getStatusLine().getStatusCode() != 200) {
                    throw new RuntimeException("Failed : HTTP error code : "
                            + response.getStatusLine().getStatusCode());

                }

                // Get-Capture Complete application/JSON body response
                BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                String output;
                System.out.println("============Output:============");
         
                

                // Simply iterate through JSON response and show on console.
                while ((output = br.readLine()) != null) {
                    System.out.println(output);
                    JSONObject obj = new JSONObject(output);
                    
                    //Notification of Successful/Failed post
                   if(obj.getString("status").equalsIgnoreCase("1"))
                   {
                       if(obj.getString("status_id").equalsIgnoreCase("1001"))
                       {
                       JOptionPane.showMessageDialog(rootPane, "Insufficient Privileges");
                       }
                    JOptionPane.showMessageDialog(rootPane, obj.getString("status_msg"));
                   }
                   else{
                   JOptionPane.showMessageDialog(rootPane, "Account Modification Success!");
                   }
                }
                
               

            } catch (ClientProtocolException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (JSONException ex) {
                Logger.getLogger(MainQueue.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Clear Forms
            userTxt.setText("");
            passTxt.setText("");
            passTxt1.setText("");
            nameTxt.setText("");
        }
        else{
        JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");
        }
        
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void queueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queueBtnActionPerformed
        // TODO add your handling code here:
        if(brandRad.isSelected()){
        
            try {

                // create HTTP Client
                HttpClient httpClient = HttpClientBuilder.create().build();

                // Create new postRequest with below mentioned URL
                HttpPost postRequest = new HttpPost("http://localhost:8080/ws/queue/join/brand");
                StringEntity input = new StringEntity("{\"brandcategory\":\"" + brandCombo.getSelectedItem().toString() + "\","
                        + "\"latitude\":" + latTxt.getText() + ","
                        + "\"longitude\":" + lonTxt.getText() + ","
                        + "\"session\":\"" + Session.getSesh() + "\"}");
                // Add additional header to getRequest which accepts application/JSON data
                input.setContentType("application/json");
                postRequest.setEntity(input);
                // Execute your request and catch response
                HttpResponse response = httpClient.execute(postRequest);

                // Check for HTTP response code: 200 = success
                if (response.getStatusLine().getStatusCode() != 200) {
                    throw new RuntimeException("Failed : HTTP error code : "
                            + response.getStatusLine().getStatusCode());

                }

                // Get-Capture Complete application/JSON body response
                BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                String output;
                System.out.println("============Output:============");
         
                

                // Simply iterate through JSON response and show on console.
                while ((output = br.readLine()) != null) {
                    System.out.println(output);
                    JSONObject obj = new JSONObject(output);
                    
                    //Notification of Successful/Failed post
                   if(obj.getString("status").equalsIgnoreCase("1"))
                   {
                       if(obj.getString("status_id").equalsIgnoreCase("1001"))
                       {
                       JOptionPane.showMessageDialog(rootPane, "Insufficient Privileges");
                       }
                    JOptionPane.showMessageDialog(rootPane, obj.getString("status_msg"));
                   }
                   else{
                   JOptionPane.showMessageDialog(rootPane, "Queue Success!");
                   }
                }
                
               

            } catch (ClientProtocolException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (JSONException ex) {
                Logger.getLogger(MainQueue.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Clear Forms
            brandRad.setSelected(false);
            catRad.setSelected(false);
            latTxt.setText("");
            lonTxt.setText("");
        
      
        
        }
        else{
        
        
        }
        
        
    }//GEN-LAST:event_queueBtnActionPerformed

    private void catRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catRadActionPerformed
        // TODO add your handling code here:
        
        brandCombo.setEnabled(false);
        catCombo.setEnabled(true);
        
    }//GEN-LAST:event_catRadActionPerformed

    private void latTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_latTxtActionPerformed

    private void leaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveBtnActionPerformed
        // TODO add your handling code here:
        
        try {

                // create HTTP Client
                HttpClient httpClient = HttpClientBuilder.create().build();

                // Create new postRequest with below mentioned URL
                HttpPost postRequest = new HttpPost("http://localhost:8080/ws/queue/leave");
                StringEntity input = new StringEntity("{\"brandcategory\":\"" + brandCombo.getSelectedItem().toString() + "\","
                        + "\"latitude\":" + latTxt.getText() + ","
                        + "\"longitude\":" + lonTxt.getText() + ","
                        + "\"session\":\"" + Session.getSesh() + "\"}");
                // Add additional header to getRequest which accepts application/JSON data
                input.setContentType("application/json");
                postRequest.setEntity(input);
                // Execute your request and catch response
                HttpResponse response = httpClient.execute(postRequest);

                // Check for HTTP response code: 200 = success
                if (response.getStatusLine().getStatusCode() != 200) {
                    throw new RuntimeException("Failed : HTTP error code : "
                            + response.getStatusLine().getStatusCode());

                }

                // Get-Capture Complete application/JSON body response
                BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                String output;
                System.out.println("============Output:============");
         
                

                // Simply iterate through JSON response and show on console.
                while ((output = br.readLine()) != null) {
                    System.out.println(output);
                    JSONObject obj = new JSONObject(output);
                    
                    //Notification of Successful/Failed post
                   if(obj.getString("status").equalsIgnoreCase("1"))
                   {
                       if(obj.getString("status_id").equalsIgnoreCase("1001"))
                       {
                       JOptionPane.showMessageDialog(rootPane, "Insufficient Privileges");
                       }
                    JOptionPane.showMessageDialog(rootPane, obj.getString("status_msg"));
                   }
                   else{
                   JOptionPane.showMessageDialog(rootPane, "Queue Success!");
                   }
                }
                
               

            } catch (ClientProtocolException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Error! Check your input.");

            } catch (JSONException ex) {
                Logger.getLogger(MainQueue.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_leaveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainQueue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainQueue().setVisible(true);
            }
        });
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel branchLbl;
    private javax.swing.JComboBox<String> brandCombo;
    private javax.swing.JRadioButton brandRad;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> catCombo;
    private javax.swing.JRadioButton catRad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField latTxt;
    private javax.swing.JToggleButton leaveBtn;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JTextField lonTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel nowServLbl;
    private javax.swing.JPasswordField passTxt;
    private javax.swing.JPasswordField passTxt1;
    private javax.swing.JToggleButton queueBtn;
    private javax.swing.JToggleButton submitBtn;
    private javax.swing.JLabel totalQueLbl;
    private javax.swing.JLabel userQueLbl;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
